   1              		.file	"main.c"
   2              		.section	.rodata.str1.1,"aMS",@progbits,1
   3              	.LC0:
   4 0000 25730A00 		.string	"%s\n"
   5              	.LC1:
   6 0004 726200   		.string	"rb"
   7              	.LC2:
   8 0007 72616E64 		.string	"random.dat"
   8      6F6D2E64 
   8      617400
   9              	.LC3:
  10 0012 556E6162 		.string	"Unable to allocate buffer"
  10      6C652074 
  10      6F20616C 
  10      6C6F6361 
  10      74652062 
  11              		.section	.rodata.str1.4,"aMS",@progbits,1
  12              		.align 4
  13              	.LC4:
  14 0000 54686520 		.string	"The file does not contain sufficient data; I need at least %d bytes\n"
  14      66696C65 
  14      20646F65 
  14      73206E6F 
  14      7420636F 
  15              		.section	.rodata.str1.1
  16              	.LC5:
  17 002c 7573625F 		.string	"usb_bulk_write() returned %d\n"
  17      62756C6B 
  17      5F777269 
  17      74652829 
  17      20726574 
  18              	.LC8:
  19 004a 2566204D 		.string	"%f MB/s\nchecksum=0x%04X\n"
  19      422F730A 
  19      63686563 
  19      6B73756D 
  19      3D307825 
  20              	.LC9:
  21 0063 46696C65 		.string	"File error: "
  21      20657272 
  21      6F723A20 
  21      00
  22              		.text
  23              		.p2align 4,,15
  24              	.globl main
  26              	main:
  27 0000 8D4C2404 		leal	4(%esp), %ecx
  28 0004 83E4F0   		andl	$-16, %esp
  29 0007 FF71FC   		pushl	-4(%ecx)
  30 000a 55       		pushl	%ebp
  31 000b 89E5     		movl	%esp, %ebp
  32 000d 57       		pushl	%edi
  33 000e 56       		pushl	%esi
  34 000f 53       		pushl	%ebx
  35 0010 51       		pushl	%ecx
  36 0011 83EC58   		subl	$88, %esp
  37 0014 E8FCFFFF 		call	usbInitialise
  37      FF
  38 0019 8D45EC   		leal	-20(%ebp), %eax
  39 001c 89442414 		movl	%eax, 20(%esp)
  40 0020 C7442410 		movl	$0, 16(%esp)
  40      00000000 
  41 0028 C744240C 		movl	$0, 12(%esp)
  41      00000000 
  42 0030 C7442408 		movl	$1, 8(%esp)
  42      01000000 
  43 0038 C7442404 		movl	$34323, 4(%esp)
  43      13860000 
  44 0040 C70424B4 		movl	$1204, (%esp)
  44      040000
  45 0047 E8FCFFFF 		call	usbOpenDevice
  45      FF
  46 004c 85C0     		testl	%eax, %eax
  47 004e 0F85AF01 		jne	.L13
  47      0000
  48              	.L2:
  49 0054 8B45EC   		movl	-20(%ebp), %eax
  50 0057 85C0     		testl	%eax, %eax
  51 0059 0F849601 		je	.L3
  51      0000
  52 005f C7442404 		movl	$.LC1, 4(%esp)
  52      04000000 
  53 0067 C7042407 		movl	$.LC2, (%esp)
  53      000000
  54 006e E8FCFFFF 		call	fopen
  54      FF
  55 0073 85C0     		testl	%eax, %eax
  56 0075 89C3     		movl	%eax, %ebx
  57 0077 0F84B101 		je	.L4
  57      0000
  58 007d C7042400 		movl	$1048576, (%esp)
  58      001000
  59 0084 E8FCFFFF 		call	malloc
  59      FF
  60 0089 85C0     		testl	%eax, %eax
  61 008b 8945C4   		movl	%eax, -60(%ebp)
  62 008e 0F84D601 		je	.L14
  62      0000
  63 0094 895C2410 		movl	%ebx, 16(%esp)
  64 0098 C744240C 		movl	$1048576, 12(%esp)
  64      00001000 
  65 00a0 C7442408 		movl	$1, 8(%esp)
  65      01000000 
  66 00a8 C7442404 		movl	$1048576, 4(%esp)
  66      00001000 
  67 00b0 890424   		movl	%eax, (%esp)
  68 00b3 E8FCFFFF 		call	__fread_chk
  68      FF
  69 00b8 3D000010 		cmpl	$1048576, %eax
  69      00
  70 00bd 0F857F01 		jne	.L15
  70      0000
  71 00c3 891C24   		movl	%ebx, (%esp)
  72 00c6 31FF     		xorl	%edi, %edi
  73 00c8 E8FCFFFF 		call	fclose
  73      FF
  74 00cd 8B4DC4   		movl	-60(%ebp), %ecx
  75 00d0 31D2     		xorl	%edx, %edx
  76              		.p2align 4,,7
  77 00d2 8DB60000 		.p2align 3
  77      0000
  78              	.L7:
  79 00d8 0FB60411 		movzbl	(%ecx,%edx), %eax
  80 00dc 83C201   		addl	$1, %edx
  81 00df 01C7     		addl	%eax, %edi
  82 00e1 81FA0000 		cmpl	$1048576, %edx
  82      1000
  83 00e7 75EF     		jne	.L7
  84 00e9 8D45E4   		leal	-28(%ebp), %eax
  85 00ec C7442404 		movl	$0, 4(%esp)
  85      00000000 
  86 00f4 890424   		movl	%eax, (%esp)
  87 00f7 E8FCFFFF 		call	gettimeofday
  87      FF
  88 00fc C7442410 		movl	$5000, 16(%esp)
  88      88130000 
  89 0104 C744240C 		movl	$1048576, 12(%esp)
  89      00001000 
  90 010c 8B45C4   		movl	-60(%ebp), %eax
  91 010f C7442404 		movl	$6, 4(%esp)
  91      06000000 
  92 0117 89442408 		movl	%eax, 8(%esp)
  93 011b 8B45EC   		movl	-20(%ebp), %eax
  94 011e 890424   		movl	%eax, (%esp)
  95 0121 E8FCFFFF 		call	usb_bulk_write
  95      FF
  96 0126 C7442404 		movl	$0, 4(%esp)
  96      00000000 
  97 012e 89C3     		movl	%eax, %ebx
  98 0130 8D45DC   		leal	-36(%ebp), %eax
  99 0133 890424   		movl	%eax, (%esp)
 100 0136 E8FCFFFF 		call	gettimeofday
 100      FF
 101 013b 81FB0000 		cmpl	$1048576, %ebx
 101      1000
 102 0141 0F853B01 		jne	.L16
 102      0000
 103 0147 8B45E4   		movl	-28(%ebp), %eax
 104 014a BE40420F 		movl	$1000000, %esi
 104      00
 105 014f 8945C8   		movl	%eax, -56(%ebp)
 106 0152 89C2     		movl	%eax, %edx
 107 0154 8B45DC   		movl	-36(%ebp), %eax
 108 0157 C1FA1F   		sarl	$31, %edx
 109 015a 8955CC   		movl	%edx, -52(%ebp)
 110 015d 8945B0   		movl	%eax, -80(%ebp)
 111 0160 89C1     		movl	%eax, %ecx
 112 0162 8B45B0   		movl	-80(%ebp), %eax
 113 0165 C1F91F   		sarl	$31, %ecx
 114 0168 894DB4   		movl	%ecx, -76(%ebp)
 115 016b 694DB440 		imull	$1000000, -76(%ebp), %ecx
 115      420F00
 116 0172 F7E6     		mull	%esi
 117 0174 01CA     		addl	%ecx, %edx
 118 0176 8B4DE8   		movl	-24(%ebp), %ecx
 119 0179 8945B8   		movl	%eax, -72(%ebp)
 120 017c 8B45C8   		movl	-56(%ebp), %eax
 121 017f 8955BC   		movl	%edx, -68(%ebp)
 122 0182 89CB     		movl	%ecx, %ebx
 123 0184 C1FB1F   		sarl	$31, %ebx
 124 0187 294DB8   		subl	%ecx, -72(%ebp)
 125 018a 8B4DE0   		movl	-32(%ebp), %ecx
 126 018d 195DBC   		sbbl	%ebx, -68(%ebp)
 127 0190 89CB     		movl	%ecx, %ebx
 128 0192 C1FB1F   		sarl	$31, %ebx
 129 0195 014DB8   		addl	%ecx, -72(%ebp)
 130 0198 115DBC   		adcl	%ebx, -68(%ebp)
 131 019b 694DCC40 		imull	$1000000, -52(%ebp), %ecx
 131      420F00
 132 01a2 F7E6     		mull	%esi
 133 01a4 2945B8   		subl	%eax, -72(%ebp)
 134 01a7 0FB7C7   		movzwl	%di, %eax
 135 01aa 8D3411   		leal	(%ecx,%edx), %esi
 136 01ad 1975BC   		sbbl	%esi, -68(%ebp)
 137 01b0 DF6DB8   		fildll	-72(%ebp)
 138 01b3 D8350000 		fdivs	.LC6
 138      0000
 139 01b9 89442410 		movl	%eax, 16(%esp)
 140 01bd D9050400 		flds	.LC7
 140      0000
 141 01c3 DCC9     		fmul	%st, %st(1)
 142 01c5 DEF1     		fdivp	%st, %st(1)
 143 01c7 DD5C2408 		fstpl	8(%esp)
 144 01cb C7442404 		movl	$.LC8, 4(%esp)
 144      4A000000 
 145 01d3 C7042401 		movl	$1, (%esp)
 145      000000
 146 01da E8FCFFFF 		call	__printf_chk
 146      FF
 147 01df 8B55C4   		movl	-60(%ebp), %edx
 148 01e2 891424   		movl	%edx, (%esp)
 149 01e5 E8FCFFFF 		call	free
 149      FF
 150              	.L9:
 151 01ea 8B45EC   		movl	-20(%ebp), %eax
 152 01ed 890424   		movl	%eax, (%esp)
 153 01f0 E8FCFFFF 		call	usb_close
 153      FF
 154              	.L3:
 155 01f5 83C458   		addl	$88, %esp
 156 01f8 31C0     		xorl	%eax, %eax
 157 01fa 59       		popl	%ecx
 158 01fb 5B       		popl	%ebx
 159 01fc 5E       		popl	%esi
 160 01fd 5F       		popl	%edi
 161 01fe 5D       		popl	%ebp
 162 01ff 8D61FC   		leal	-4(%ecx), %esp
 163 0202 C3       		ret
 164              	.L13:
 165 0203 E8FCFFFF 		call	usbStrError
 165      FF
 166 0208 C7442408 		movl	$.LC0, 8(%esp)
 166      00000000 
 167 0210 C7442404 		movl	$1, 4(%esp)
 167      01000000 
 168 0218 8944240C 		movl	%eax, 12(%esp)
 169 021c A1000000 		movl	stderr, %eax
 169      00
 170 0221 890424   		movl	%eax, (%esp)
 171 0224 E8FCFFFF 		call	__fprintf_chk
 171      FF
 172 0229 E926FEFF 		jmp	.L2
 172      FF
 173              	.L4:
 174 022e C7042463 		movl	$.LC9, (%esp)
 174      000000
 175 0235 E8FCFFFF 		call	perror
 175      FF
 176              		.p2align 4,,3
 177 023a 8DB60000 		.p2align 3
 177      0000
 178 0240 EBA8     		jmp	.L9
 179              	.L15:
 180 0242 C7442408 		movl	$1048576, 8(%esp)
 180      00001000 
 181 024a C7442404 		movl	$.LC4, 4(%esp)
 181      00000000 
 182 0252 C7042401 		movl	$1, (%esp)
 182      000000
 183 0259 E8FCFFFF 		call	__printf_chk
 183      FF
 184 025e C7042401 		movl	$1, (%esp)
 184      000000
 185 0265 E8FCFFFF 		call	exit
 185      FF
 186              	.L14:
 187 026a C7042412 		movl	$.LC3, (%esp)
 187      000000
 188 0271 E8FCFFFF 		call	puts
 188      FF
 189 0276 C7042401 		movl	$1, (%esp)
 189      000000
 190 027d E8FCFFFF 		call	exit
 190      FF
 191              	.L16:
 192 0282 895C2408 		movl	%ebx, 8(%esp)
 193 0286 C7442404 		movl	$.LC5, 4(%esp)
 193      2C000000 
 194 028e C7042401 		movl	$1, (%esp)
 194      000000
 195 0295 E8FCFFFF 		call	__printf_chk
 195      FF
 196 029a C7042401 		movl	$1, (%esp)
 196      000000
 197 02a1 E8FCFFFF 		call	exit
 197      FF
 199              		.section	.rodata.cst4,"aM",@progbits,4
 200              		.align 4
 201              	.LC6:
 202 0000 00247449 		.long	1232348160
 203              		.align 4
 204              	.LC7:
 205 0004 00008049 		.long	1233125376
 206              		.ident	"GCC: (Ubuntu 4.3.3-5ubuntu4) 4.3.3"
 207              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc1fYzr6.s:26     .text:0000000000000000 main

UNDEFINED SYMBOLS
usbInitialise
usbOpenDevice
fopen
malloc
__fread_chk
fclose
gettimeofday
usb_bulk_write
__printf_chk
free
usb_close
usbStrError
stderr
__fprintf_chk
perror
exit
puts
